 try {
              //$handle = new COM("GRH2.Personnel") or die("Unable to instanciate Word");   //dll local// D:/Mes-programmes/DotNET/Dll/GRH2/GRH2
              $handle = new COM("GRH.Personnel") or die("Unable to instanciate Word"); //vrai derniere dll local //D:\cdta-work\Dossier Patient\DGSN-Glysines\DLL\Mien\Debug
              //$handle = new COM("GRH_DLL.Personnel") or die("Unable to instanciate Word");//dgsn network sll
              $output=""; $ayants="";
              $assure = $handle->SelectPersonnel(trim($request->matricule),trim($request->nss));   
              if($assure->Nom != null)
              {
                $action = ""; 
                $positions = array("Révoqué", "Licencié", "Démission", "Contrat résilié");
                $sexe =  ($assure->Genre =="M") ? "Masculin":"Féminin";
                $service = utf8_encode($assure->Service);
                $date =  \Carbon\Carbon::parse(trim($assure->Date_Naissance))->format('Y-m-d');
                $grade = grade::where('nom',$assure->Grade)->select('id')->get()->first();
                switch(($assure->SituationFamille{0})){
                  case "M"  :
                        $sf = "M";
                         break; 
                   case  "C":
                        $sf = "C";
                         break; 
                         break;
                  case "D"  :
                        $sf = "D";
                         break;
                  case "V" :
                        $sf = "V";
                         break; 
                   default:
                        $sf = "M";
                         break;
                }
                if($this->assureSearch($assure->NSS) == null) //tester si l'assure existe
                  $this->save($assure,$date,$sf,$grade->id);//inserer l'assure //
                else
                  $this->updateAssure($sf, $assure->Matricule, utf8_encode($assure->Adresse) , $assure->WilayaResidence, $grade->id, utf8_encode($assure->Service),utf8_encode($assure->Position),  $assure->NSS);
                if(Auth::user()->role_id !=4)<!-- !=admin -->
                {
                  if(!in_array(utf8_encode($assure->Position), $positions))
                  { 
                    $patientId = $this->patientSearch($assure->Prenom,$assure->NSS);
                    if(isset($patientId))
                      $action = '<a href="/patient/'.$patientId.'" class="btn btn-success btn-xs" data-toggle="tooltip" title="Consulter" data-placement="bottom"><i class="fa fa-hand-o-up fa-xs"></i></a>'; 
                    else
                      $action = '<a href="assur/patientAssuree/'.$assure->NSS.'/0/'.$assure->Prenom.'" class="'.'btn btn-primary btn-xs" data-toggle="tooltip" title="Ajouter patient" data-placement="bottom"><i class="fa fa-plus-circle fa-xs"></i></a>';  
                  }else
                    $action = '<b><span class="badge badge-danger">'.utf8_encode($assure->Position).'</span></b>';
                }
                $dateN =  \Carbon\Carbon::parse(trim($assure->Date_Naissance))->format('Y-m-d');
                $wilaya = (Wilaya::findOrFail($assure->WilayaResidence))->nom;
                $output.='<tr><td>'.$assure->Nom.'</td><td>'.$assure->Prenom.'</td><td>'.$dateN.'</td><td>'.utf8_encode($assure->SituationFamille).'</td><td>'
                          .$wilaya.'</td><td>'.$assure->NSS.'</td><td>'.$sexe.'</td><td><span class="badge badge-success">'
                          .utf8_encode($assure->Position).'</span></td><td><span class="badge">'.$assure->Matricule.'</span></td><td>'
                          .utf8_encode($assure->Service).'</td><td>'.$assure->Grade.'</td><td class="center">'.$action.'</td></tr>';
                if(!in_array(utf8_encode($assure->Position), $positions))
                {    
                  if($assure->Conjoint != ''){
                    $patientId = $this->patientSearch($assure->Conjoint,$assure->NSS);//Ayants  //recherche conjoint
                    if(Auth::user()->role_id !=4)
                    {
                      if(isset($patientId))
                        $action = '<a href="/patient/'.$patientId.'" class="btn btn-success btn-xs" data-toggle="tooltip" title="Consulter" data-placement="bottom"><i class="fa fa-hand-o-up fa-xs"></i></a>'; 
                      else
                      $action = '<a href="assur/patientAssuree/'.$assure->NSS.'/1/'.$assure->Conjoint.'" class="'.'btn btn-primary btn-xs" data-toggle="tooltip" title="Ajouter Patient" data-placement="bottom"><i class="fa fa-plus-circle fa-xs"></i></a>';  
                    }
                    $ayants .='<tr><td>'.$assure->Conjoint.'</td><td><span clas="badge">Conjoint(e)</span></td>'.'<td class="center">'.$action.'</td></tr>';
                  }    
                  if($assure->Pere != '') {
                    $patientId = $this->patientSearch($assure->Pere,$assure->NSS);  //recerche pere
                    if(Auth::user()->role_id !=4)
                    {
                      if(isset($patientId))
                        $action = '<a href="/patient/'.$patientId.'" class="btn btn-success btn-xs" data-toggle="tooltip" title="Consulter" data-placement="bottom"><i class="fa fa-hand-o-up fa-xs"></i></a>'; 
                      else
                        $action = '<a href="assur/patientAssuree/'.$assure->NSS.'/2/'.$assure->Pere.'" class="'.'btn btn-primary btn-xs" data-toggle="tooltip" title="Ajouter Patient" data-placement="bottom"><i class="ace-icon  fa fa-plus-circle"></i></a>';  
                    }
                    $ayants .='<tr><td>'.$assure->Pere.'</td><td><span clas="badge">Pere</span></td>'.'<td class="center">'.$action.'</td></tr>';
                  }
                  if($assure->Mere != '') {
                    $patientId = $this->patientSearch($assure->Mere,$assure->NSS); //Recherce Mere
                    if(Auth::user()->role_id !=4)
                    {
                      if(isset($patientId))
                        $action = '<a href="/patient/'.$patientId.'" class="btn btn-success btn-xs" data-toggle="tooltip" title="Consulter" data-placement="bottom"><i class="fa fa-hand-o-up fa-xs"></i></a>'; 
                      else
                        $action = '<a href="assur/patientAssuree/'.$assure->NSS.'/3/'.$assure->Mere.'" class="'.'btn btn-primary btn-xs" data-toggle="tooltip" title="Ajouter Patient" data-placement="bottom"><i class="ace-icon  fa fa-plus-circle"></i></a>';  
                    }
                    $ayants .='<tr><td>'.$assure->Mere.'</td><td><span clas="badge">Mere</span></td>'.'<td class="center">'.$action.'</td></tr>';
                  }
                  if($assure->Enfants != '')
                  {
                    $enfants = explode ( '|' , $assure->Enfants);
                    foreach ($enfants as $key => $enfant)
                    {
                      $patientId = $this->patientSearch($enfant,$assure->NSS);
                      if(Auth::user()->role_id !=4)
                      {
                        if(isset($patientId))
                          $action = '<a href="/patient/'.$patientId.'" class="btn btn-success btn-xs" data-toggle="tooltip" title="Consulter" data-placement="bottom"><i class="fa fa-hand-o-up fa-xs"></i></a>'; 
                        else
                          $action = '<a href="assur/patientAssuree/'.$assure->NSS.'/4/'.$enfant.'" class="'.'btn btn-primary btn-xs" data-toggle="tooltip" title="Ajouter Patient" data-placement="bottom"><i class="fa fa-plus-circle fa-xs"></i></a>';
                      }
                      $ayants .='<tr><td>'.$enfant.'</td><td><span clas="badge">Enfant</span></td>'.'<td class="center">'.$action.'</td></tr>';    
                    }
                  }
                }// }
                return Response([$output,$ayants])->withHeaders(['count' =>1]);
            }else{
                 return Response(null)->withHeaders(['count' =>0]);//pas de Fonctionnaire
            }                 
        }catch (Exception $e) {//errer com
             echo 'Exception reçue Com Object : ',  $e->getMessage(), "\n";
        }